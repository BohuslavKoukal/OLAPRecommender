@model Recommender2.ViewModels.SingleDatasetViewModel
@Scripts.Render("~/bundles/modaldialog")
<h2>Mine rules in @Model.Name</h2>
<p>
    @using (Html.BeginForm("MineRules", "MinedResults", null, FormMethod.Post))
    {
        @Html.HiddenFor(m => Model.Id)
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                Task name: <input id="name" name="name" type="text" /> <br />
                I am interested in rules, supported by at least <input id="baseQ" name="baseQ" type="number" value="1"> % of rows (= base quantifier value).<br/>
                I would like to obtain relations on subsets, that are at least <input id="aadQ" name="aadQ" type="number" value="2"> times stronger than in the rest of dataset (= above average quantifier value).<br/>
                <a href="#" id="modalOpen">Define subcube to mine in</a> (if there are some dimensions not commensurable with the rest, you have to exclude them to get better results)
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Mine rules" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
    </p>

<div id="myModal" class="modal">
    <div class="modal-content">
        <div class="modal-header">
            <h2>Apply filters</h2>
        </div>
        <div class="modal-body">
            <div class="form-group">

                @for (var i = 0; i < Model.Filter?.Dimensions.Count; i++)
                {
                    var dimension = Model.Filter.Dimensions[i];
                    <div class="floating-box">
                        <strong>@Html.DisplayFor(m => Model.Filter.Dimensions[i].DimensionName)</strong><br />
                        @Html.Hidden($"dimensions[{i}].Key", dimension.DimensionId)
                        @for (var j = 0; j < dimension.Values.Count; j++)
                        {
                            var value = dimension.Values[j];
                            @Html.Hidden($"dimensions[{i}].Value[{j}].Key", value.Id)
                            @Html.CheckBox($"dimensions[{i}].Value[{j}].Value", value.Checked)
                            @Html.Label(value.Value, " " + value.Value)
                            @Html.Hidden($"dimensions[{i}].Value[{j}].Value", value.Id, new { value = false })
                            <br />
                        }
                    </div>
                }

                <p><span class="close btn btn-default">Apply filters</span></p>
            </div>
            <p></p>
        </div>
    </div>

</div>



