@using System.Activities.Statements
@using Recommender.Common.Enums
@model Recommender2.ViewModels.SingleDatasetViewModel
@{
    ViewBag.Title = "Create Dataset " + Model.Name;
    var manualDefinitionDisplay = Model.FileType == FileType.Csv ? "block" : "none";
    var dsdUploadDisplay = Model.FileType == FileType.Ttl ? "block" : "none";
}
@Scripts.Render("~/bundles/createdataset")
<h2>Create Dataset @Model.Name</h2>
<a id="prefill">Prefill data</a>
@using (Html.BeginForm("CreateDatasetManually", "Upload", null, FormMethod.Post, new { id = "manualDefinition", style = "display: " + @manualDefinitionDisplay }))
{
    @Html.HiddenFor(m => Model.Id);
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <table>
                    <tr><th>Attribute</th><th>Data Type</th><th>Role</th><th>Parent dimension</th></tr>
                    @for (int i = 0; i < Model.Attributes?.Count; i++)
                {
                        <tr>
                            @Html.HiddenFor(m => Model.Attributes[i].Name)
                            <td>@Html.DisplayFor(m => Model.Attributes[i].Name)</td>
                            <td>@Html.DropDownListFor(m => m.Attributes[i].SelectedAttributeType, Model.DataTypes, "Select data type", new { @class = "form-control, type", sequence = i })</td>
                            <td>@Html.DropDownListFor(m => m.Attributes[i].SelectedAttributeRoleId, EnumHelper.GetSelectList(typeof(AttributeRole)), "Select attribute role", new { @class = "form-control, role", sequence = i })</td>
                            <td>@Html.DropDownListFor(m => m.Attributes[i].SelectedAttributeParentName, Model.AttributesSelectList, "Root dimension", new { @class = "form-control, parent", sequence = i })</td>
                        </tr>
                    }
                </table>
                <p>Or define dimensions by <a href="#" class="uploadLink">uploading .ttl file</a> with data structure definition.</p>
            </div>
            <div class="form-group">
                @Html.Label("Column separator", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(m => m.Separator, Model.SeparatorSelectList, "", new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Date format", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(m => m.DateFormat, Model.DateFormatSelectList, "Date format used in uploaded file", new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create cube" class="btn btn-default" />
                </div>
            </div>
    </div>
}

@using (Html.BeginForm("CreateDatasetFromDsd", "Upload", null, FormMethod.Post, new { enctype = "multipart/form-data", id = "dsdUpload", style = "display: " + @dsdUploadDisplay }))
{
    @Html.HiddenFor(m => Model.Id);
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        Define dimensions and measures by uploading a .ttl data structure definition file <a href="#" id="modalOpen"><img src="~/Content/images/ot.png" height="15" title="How to create .ttl?"></a>
        @Html.Label("Data structure definition file", new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" id="DsdFile" name="upload" />
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Upload dsd file" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div id="myModal" class="modal">
    <div class="modal-content">
        <p><span class="close">X</span></p>
        <div class="modal-header">
            <h2>Defining dimensions with .ttl file</h2>
        </div>
        <div class="modal-body">
            <h2>If there is no hierarchy in your data</h2>
            <p>In such case no codelist needs to be defined in uploaded data structure definition file. Values of dimensions will be obtained directly from data file.</p>

            <h2>How to define time dimensions</h2>
            <p>If there is some time dimension, its
            <pre>http://www.w3.org/2000/01/rdf-schema#range</pre> must be 
            <pre>http://reference.data.gov.uk/def/intervals/Interval</pre>
            In your data you can then use gregorian-year, gregorian-month and gregorian-day, other types are currently not supported.
            
            <h2>Attributes and dimensions which belong to the dataset</h2>
            <p>
                Attributes and dimensions which belong to the dataset (are defined as follows):
                <pre>qb:component [ qb:dimension obeu-dimension:budgetaryUnit ;
                 qb:componentAttachment qb:DataSet ]
            </pre>
                are ignored. They have same value for each observation, therefore from OLAP/ARM view they carry no information.
            </p>

            <h2>How to define hierarchy in the data</h2>
            <p>
                <ol>
                    <li><pre>http://www.w3.org/2000/01/rdf-schema#range</pre> of the dimension must be <pre>http://www.w3.org/2004/02/skos/core#Concept</pre> </li>
                    <li>All codelist for dimensions which are included in hierarchy definition must be defined inside the uploaded data structure definition file. If codelist is not defined in that file, values of the dimension will be obtained from data file and no hierarchy can be defined for the dimension.</li>
                    <li>Hierarchy is modelled using <pre>http://www.w3.org/2004/02/skos/core#broader</pre> There can be only one broader triple (product belongs to one category, city to one country etc.).</li>
                </ol>
            </p>
            <p>Example of correct data structure definition file:</p>
            <p>
                <pre>
@@prefix qb:               &lt;http://purl.org/linked-data/cube#&gt; .<br />@@prefix rdf:              &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt; .<br />@@prefix rdfs:             &lt;http://www.w3.org/2000/01/rdf-schema#&gt; .<br />@@prefix skos:             &lt;http://www.w3.org/2004/02/skos/core#&gt; .<br />@@prefix xsd:              &lt;https://www.w3.org/2001/XMLSchema#&gt; .<br />@@prefix sdmx-measure:		&lt;http://purl.org/linked-data/sdmx/2009/measure#&gt; .<br /><br />@@prefix recommender:	          &lt;http://www.olaprecommender.com/ontology/dsd/&gt; .<br />@@prefix codelist-product:       &lt;http://www.olaprecommender.com/codelist/Product/&gt; .<br />@@prefix codelist-category:      &lt;http://www.olaprecommender.com/codelist/Category/&gt; .<br />@@prefix codelist:        &lt;http://www.olaprecommender.com/codelist/&gt; .<br />@@prefix interval:               &lt;http://reference.data.gov.uk/def/intervals/&gt; .	<br /><br />recommender:retailDsd a qb:DataStructureDefinition ;<br />rdfs:label &quot;Data structure definition for retail dataset&quot;@@en ;<br />qb:component [ qb:dimension recommender:Date],<br />               [ qb:dimension recommender:Month],<br />               [ qb:dimension recommender:Product],<br />               [ qb:dimension recommender:Category]<br />               [ qb:measure recommender:Units] .<br /><br /># ----- Component properties -----<br /><br />recommender:Date a rdf:Property, qb:DimensionProperty;<br />    rdfs:label &quot;Date&quot;@@en;<br />    rdfs:range interval:Interval;<br />    .<br /><br />recommender:Month a rdf:Property, qb:DimensionProperty;<br />    rdfs:label &quot;Month&quot;@@en;<br />    rdfs:range interval:Interval;<br />    .<br /><br />recommender:Product a rdf:Property, qb:DimensionProperty;<br />    rdfs:label &quot;Product&quot;@@en;<br />    rdfs:range skos:Concept ;<br />    qb:codeList codelist:Product ;<br />    .<br /><br />recommender:Category a rdf:Property, qb:DimensionProperty;<br />    rdfs:label &quot;Category&quot;@@en;<br />    rdfs:range skos:Concept ;<br />    qb:codeList codelist:Category ;<br />    .<br /><br />recommender:Units  a rdf:Property, qb:MeasureProperty;<br />    rdfs:label &quot;Units sold&quot;@@en;<br />    rdfs:subPropertyOf sdmx-measure:obsValue;<br />    rdfs:range xsd:integer ;<br />    .<br />    <br />    ## Codelists<br /><br />codelist:Product a skos:ConceptScheme ;<br />    rdfs:label &quot;A code list of products sold in shop&quot;@@en .<br />    <br />codelist:Category a skos:ConceptScheme ;<br />    rdfs:label &quot;A code list of product categories sold in shop&quot;@@en .<br />    <br />    ## Products<br />    <br />codelist-product:Bread  a skos:Concept ;<br />  skos:prefLabel &quot;Bread&quot;@@en ;<br />  skos:broader codelist-category:Bakery ;<br />  skos:inScheme codelist:Product .<br />  <br />codelist-product:Bun  a skos:Concept ;<br />  skos:prefLabel &quot;Bun&quot;@@en ;<br />  skos:broader codelist-category:Bakery ;<br />  skos:inScheme codelist:Product .<br />  <br />codelist-product:Milk  a skos:Concept ;<br />  skos:prefLabel &quot;Milk&quot;@@en ;<br />  skos:broader codelist-category:Dairy ;<br />  skos:inScheme codelist:Product .  <br />  <br />  ## Categories<br /><br />codelist-category:Bakery  a skos:Concept ;<br />  skos:prefLabel &quot;Bakery&quot;@@en ;<br />  skos:narrower codelist-product:Bread, codelist-product:Bun ;<br />  skos:inScheme codelist:Category .  <br /><br />codelist-category:Dairy  a skos:Concept ;<br />  skos:prefLabel &quot;Dairy&quot;@@en ;<br />  skos:narrower codelist-product:Milk, codelist-product:Butter ;<br />  skos:inScheme codelist:Category .    
                </pre>
            </p>
            <p></p>
        </div>
    </div>
</div>











            
        






